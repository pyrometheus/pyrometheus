name: CI
on:
    push:
        branches:
        - main
    pull_request:
    schedule:
        - cron:  '17 3 * * 0'

jobs:
    flake8:
        name: Flake8
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/prepare-and-run-flake8.sh
                . ./prepare-and-run-flake8.sh "$(basename $GITHUB_REPOSITORY)" test

    flake8_gen:
        name: Flake8 on Generated Code
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            run: |
                curl -L -O https://tiker.net/ci-support-v0
                . ./ci-support-v0
                build_py_project_in_conda_env
                python -m pip install flake8 pep8-naming flake8-quotes flake8-bugbear
                python .ci/generate-test-mech.py
                flake8 --extend-ignore E501,Q000 test/mechs

    pytest:
        name: Pytest Conda Py${{ matrix.python_version }}
        strategy:
            matrix:
                # "3" is intentional: It's suppposed to be conda's default
                # Python version number, which seems to have moved past
                # 3.9 as of 2022-02-20.
                python_version: ["3.9", "3"]
        runs-on: ubuntu-latest
        env:
            PYTHON_VERSION: ${{ matrix.python_version }}
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            run: |
                CONDA_ENVIRONMENT=.test-conda-env-py3.yml
                sed -i "s/python=3/python=${PYTHON_VERSION}/" "$CONDA_ENVIRONMENT"

                curl -L -O https://tiker.net/ci-support-v0
                . ./ci-support-v0
                build_py_project_in_conda_env
                test_py_project

    # examples3:
    #     name: Examples Conda Py
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   uses: actions/checkout@v2
    #     -   name: "Main Script"
    #         run: |
    #            curl -L -O https://tiker.net/ci-support-v0
    #            . ./ci-support-v0
    #            build_py_project_in_conda_env
    #            run_examples

    docs:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                curl -L -O https://tiker.net/ci-support-v0
                . ci-support-v0
                build_py_project_in_conda_env
                python .ci/generate-example-mech.py test/mechs/sandiego.yaml pyrometheus/thermochem_example.py
                build_docs

    downstream_tests:
        strategy:
            matrix:
                downstream_project: [mirgecom]
        name: Tests for downstream project ${{ matrix.downstream_project }}
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            env:
                DOWNSTREAM_PROJECT: ${{ matrix.downstream_project }}
            run: |
                curl -L -O https://tiker.net/ci-support-v0
                . ./ci-support-v0

                git clone "https://github.com/illinois-ceesd/$DOWNSTREAM_PROJECT.git"
                cd "$DOWNSTREAM_PROJECT"
                echo "*** $DOWNSTREAM_PROJECT version: $(git rev-parse --short HEAD)"
                edit_requirements_txt_for_downstream_in_subdir
                # Avoid slow or complicated tests in downstream projects
                export PYTEST_ADDOPTS="-k 'not (slowtest or octave or mpi)'"
                if test "$DOWNSTREAM_PROJECT" = "mirgecom"; then
                    # can't turn off MPI in mirgecom
                    export CONDA_ENVIRONMENT=conda-env.yml
                    echo "- mpi4py" >> "$CONDA_ENVIRONMENT"
                else
                    sed -i "/mpi4py/ d" requirements.txt
                    export CONDA_ENVIRONMENT=.test-conda-env-py3.yml

                fi
                build_py_project_in_conda_env

                export CISUPPORT_PARALLEL_PYTEST=no
                test_py_project

# vim: sw=4
